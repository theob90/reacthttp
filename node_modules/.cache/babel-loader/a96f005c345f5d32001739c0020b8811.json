{"ast":null,"code":"var _jsxFileName = \"D:\\\\duski\\\\Documents\\\\coding\\\\reacthttp\\\\src\\\\containers\\\\Posts\\\\Posts.js\";\nimport React, { Component } from 'react';\nimport axios from '../../../axios';\nimport Post from '../../../components/Post/Post';\n\nclass Posts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    // me t then tha gine execute otan fortwsei t dedomena\n    axios.get('/posts').then(response => {\n      //fernei 4 posts\n      const posts = response.data.slice(0, 4); // thelw n m guriizei arthara m author\n\n      const updatedPosts = posts.map(post => {\n        return { ...post,\n          author: 'Max'\n        };\n      });\n      this.setState({\n        posts: updatedPosts\n      }); //console.log(response);\n    }).catch(error => {\n      this.setState({\n        error: true\n      });\n    });\n  }\n\n  render() {\n    postSelectedHandler = id => {\n      this.setState({\n        selectedPostId: id\n      });\n    };\n\n    let posts = /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \" something went wrong\");\n\n    if (!this.state.error) {\n      posts = this.state.posts.map(post => {\n        return /*#__PURE__*/React.createElement(Post, {\n          key: post.id,\n          title: post.title,\n          author: post.author,\n          clicked: () => this.postSelectedHandler(post.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 28\n          }\n        });\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"Posts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, posts);\n  }\n\n}\n\nexport default Posts;","map":{"version":3,"sources":["D:/duski/Documents/coding/reacthttp/src/containers/Posts/Posts.js"],"names":["React","Component","axios","Post","Posts","state","posts","componentDidMount","get","then","response","data","slice","updatedPosts","map","post","author","setState","catch","error","render","postSelectedHandler","id","selectedPostId","textAlign","title"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;AAIA,MAAMC,KAAN,SAAoBH,SAApB,CAA6B;AAAA;AAAA;AAAA,SAGrBI,KAHqB,GAGb;AACJC,MAAAA,KAAK,EAAE;AADH,KAHa;AAAA;;AAQrBC,EAAAA,iBAAiB,GAAG;AAEhB;AACAL,IAAAA,KAAK,CAACM,GAAN,CAAU,QAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AAEd;AACA,YAAMJ,KAAK,GAAGI,QAAQ,CAACC,IAAT,CAAcC,KAAd,CAAoB,CAApB,EAAsB,CAAtB,CAAd,CAHc,CAKd;;AAEA,YAAMC,YAAY,GAAGP,KAAK,CAACQ,GAAN,CAAUC,IAAI,IAAG;AAClC,eAAM,EACF,GAAGA,IADD;AAEFC,UAAAA,MAAM,EAAC;AAFL,SAAN;AAIH,OALoB,CAArB;AAMA,WAAKC,QAAL,CAAc;AAACX,QAAAA,KAAK,EAAEO;AAAR,OAAd,EAbc,CAcd;AACH,KAhBL,EAiBKK,KAjBL,CAiBWC,KAAK,IAAG;AACX,WAAKF,QAAL,CAAc;AAACE,QAAAA,KAAK,EAAE;AAAR,OAAd;AACH,KAnBL;AAqBH;;AAEDC,EAAAA,MAAM,GAAE;AAERC,IAAAA,mBAAmB,GAAIC,EAAD,IAAO;AACzB,WAAKL,QAAL,CAAc;AAACM,QAAAA,cAAc,EAAED;AAAjB,OAAd;AACH,KAFD;;AAIA,QAAIhB,KAAK,gBAAG;AAAG,MAAA,KAAK,EAAE;AAACkB,QAAAA,SAAS,EAAC;AAAX,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAZ;;AACI,QAAG,CAAC,KAAKnB,KAAL,CAAWc,KAAf,EAAqB;AACjBb,MAAAA,KAAK,GAAC,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBC,IAAI,IAAI;AAC/B,4BAAO,oBAAC,IAAD;AAAM,UAAA,GAAG,EAAEA,IAAI,CAACO,EAAhB;AACK,UAAA,KAAK,EAAEP,IAAI,CAACU,KADjB;AAEK,UAAA,MAAM,EAAEV,IAAI,CAACC,MAFlB;AAGK,UAAA,OAAO,EAAE,MAAK,KAAKK,mBAAL,CAAyBN,IAAI,CAACO,EAA9B,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,OALK,CAAN;AAOP;;AAED,wBACI;AAAS,MAAA,SAAS,EAAC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKhB,KADL,CADJ;AAKH;;AAxDwB;;AA2D7B,eAAeF,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from '../../../axios';\r\nimport Post from '../../../components/Post/Post';\r\n\r\n\r\n\r\nclass Posts extends Component{\r\n\r\n\r\n        state = {\r\n            posts: []\r\n\r\n        }\r\n\r\n        componentDidMount() {\r\n\r\n            // me t then tha gine execute otan fortwsei t dedomena\r\n            axios.get('/posts')\r\n                .then(response => {\r\n    \r\n                    //fernei 4 posts\r\n                    const posts = response.data.slice(0,4);\r\n    \r\n                    // thelw n m guriizei arthara m author\r\n    \r\n                    const updatedPosts = posts.map(post =>{\r\n                        return{\r\n                            ...post,\r\n                            author:'Max'\r\n                        }\r\n                    })\r\n                    this.setState({posts: updatedPosts});\r\n                    //console.log(response);\r\n                })\r\n                .catch(error =>{\r\n                    this.setState({error: true});\r\n                });\r\n    \r\n        }\r\n\r\n        render(){\r\n\r\n        postSelectedHandler = (id) =>{\r\n            this.setState({selectedPostId: id});\r\n        }\r\n    \r\n        let posts = <p style={{textAlign:'center'}}> something went wrong</p>;\r\n            if(!this.state.error){\r\n                posts=this.state.posts.map(post => {\r\n                    return <Post key={post.id}\r\n                                title={post.title}\r\n                                author={post.author}\r\n                                clicked={() =>this.postSelectedHandler(post.id)}/>;\r\n                });\r\n\r\n        }        \r\n\r\n        return(\r\n            <section className=\"Posts\">\r\n                {posts}\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}